name: Aria2 Pro Core Build

on:
  workflow_dispatch:
  push:
    tags: ['*']
    paths-ignore:
      - '**.md'
      - 'LICENSE'

env:
  ARTIFACT_PREFIX: aria2-pro-core
  OUTPUT_DIR: ./output

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 45
    strategy:
      fail-fast: false
      matrix:
        platforms: [amd64, arm64, armhf, i386]
        include:
          - platform: amd64
            builder_image: debian:11-slim
            build_script: aria2-gnu-linux-build-amd64.sh
          - platform: arm64
            builder_image: debian:11-slim
            build_script: aria2-gnu-linux-cross-build-arm64.sh
          - platform: armhf
            builder_image: ubuntu:20.04  # 升级基础镜像
            build_script: aria2-gnu-linux-cross-build-armhf.sh
          - platform: i386
            builder_image: debian:11-slim  # 统一使用 Debian 11
            build_script: aria2-gnu-linux-cross-build-i386.sh

    steps:
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64,arm

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive


      - name: Docker build
        env:
          DOCKER_BUILDKIT: 1
        run: |
          docker buildx build \
            --progress=plain \
            --build-arg BUILDER_IMAGE=${{ matrix.builder_image }} \
            --build-arg BUILD_SCRIPT=${{ matrix.build_script }} \
            --platform linux/${{ matrix.platform }} \
            --output type=local,dest=${{ env.OUTPUT_DIR }} \
            . 2>&1 | tee build.log
            
      - name: Analyze build log
        if: ${{ !cancelled() }}
        run: |
          grep -iE 'fatal|error|critical|failure' build.log && exit 1 || true

      - name: Verify binary
        run: |
          tar xzvf ${{ env.OUTPUT_DIR }}/aria2-*.tar.gz
          file aria2c | tee ${{ env.OUTPUT_DIR }}/metadata-${{ matrix.platform }}.txt
          ./aria2c -v | tee ${{ env.OUTPUT_DIR }}/version-${{ matrix.platform }}.txt

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_PREFIX }}-${{ matrix.platform }}
          path: |
            ${{ env.OUTPUT_DIR }}/*.tar.gz
            ${{ env.OUTPUT_DIR }}/*.txt
            build.log

  release:
    name: Create Release
    runs-on: ubuntu-22.04
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ${{ env.ARTIFACT_PREFIX }}

      - name: Generate checksums
        run: |
          cd ${{ env.ARTIFACT_PREFIX }}
          sha256sum * > checksums.txt

      - name: Publish release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: "Aria2 Pro Core ${{ github.ref_name }}"
          body: Multi-architecture builds with enhanced features
          files: |
            ${{ env.ARTIFACT_PREFIX }}/**/*
